<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!--현재 작성중인 Mapper와 연결시켜줄 DAO객체를 명시한다-->
<mapper namespace="com.fundly.project.model.GiftMapper">

    <sql id="selectFromGiftTb">
        SELECT * from pj_gift_tmp2
    </sql>

    <!-- (특정 프로젝트의) 모든 선물 갯수 세기 -->
    <select id="count" resultType="int">
        SELECT count(gift_id) FROM pj_gift_tmp2
        WHERE pj_id = #{pj_id}
    </select>

    <!--    1. (특정 프로젝트의) 선물 등록하기 -->
    <insert id="insert" parameterType="GiftDto">
        INSERT INTO pj_gift_tmp2
        (gift_name,pj_id,gift_qty_lim_yn,gift_total_qty,
         gift_max_qty_per_person, gift_ship_due_date, gift_ship_need_yn, gift_money,
         gift_curr_qty, dba_reg_id)
        VALUES (#{gift_name},#{pj_id},#{gift_qty_lim_yn}, #{gift_total_qty},
                #{gift_max_qty_per_person}, #{gift_ship_due_date}, #{gift_ship_need_yn}, #{gift_money},
                #{gift_curr_qty}, #{dba_reg_id})
    </insert>

    <!--    선물 조회하기     -->
    <!--    2. 선물 하나 조회하기 -->
    <select id="select" resultType="GiftDto">
        <include refid="selectFromGiftTb"/>
        WHERE gift_id = #{gift_id}
    </select>

    <!--    3. 특정 프로젝트의 모든 선물 조회 -->
    <select id="selectAllByPj" resultType="GiftDto">
        <include refid="selectFromGiftTb"/>
        WHERE pj_id = #{pj_id}
    </select>

    <!--   4. (특정 프로젝트에 속한 선물 중) 판매 상태에 따른 선물 조회 -->
    <select id="selectByStatus" parameterType="GiftDto" resultType="GiftDto">
        <include refid="selectFromGiftTb"/>
        WHERE pj_id = #{pj_id}
        AND gift_status = #{gift_status}
    </select>

    <!--    선물의 상태 변경-->
    <!--    5. (프로젝트 심사 요청 이전) 선물의 상세 내용 변경 -->
    <update id="updateContentBefore" parameterType="GiftDto">
        UPDATE pj_gift_tmp2
        SET gift_name = #{gift_name},
        gift_qty_lim_yn = #{gift_qty_lim_yn},
        gift_total_qty = #{gift_total_qty},
        gift_max_qty_per_person = #{gift_max_qty_per_person},
        gift_ship_due_date = #{gift_ship_due_date},
        gift_ship_need_yn = #{gift_ship_need_yn},
        gift_money = #{gift_money},
        gift_curr_qty = #{gift_curr_qty}
        WHERE gift_id = #{gift_id}
        <!-- 아직 프로젝트 승인 이전이므로
        최초 등록시 입력된 값 중 변경이 일어나지 않는 초기값(ex.판매량, 선물등록자 등)은
        업데이트 항목에서 제외-->
    </update>


    <!--    6. (프로젝트 진행 중) 특정 선물의 판매 상태 변경 (ex. 판매중 -> 일시품절)  -->
    <update id="updateStatus" parameterType="GiftDto">
        UPDATE pj_gift_tmp2
        SET gift_status = #{gift_status}
        WHERE gift_id = #{gift_id}
    </update>

    <!-- 7. (프로젝트 진행 중) 특정 선물의 선물 수량 변경 -->
    <update id="updateQty" parameterType="GiftDto">
        UPDATE pj_gift_tmp2
        SET  gift_qty_lim_yn = #{gift_qty_lim_yn},
             gift_total_qty = #{gift_total_qty},
             gift_max_qty_per_person = #{gift_max_qty_per_person}
        WHERE gift_id = #{gift_id}
    </update>

    <!--    선물 삭제하기     -->
    <!--  7. 특정 선물 삭제  -->
    <delete id="delete">
        DELETE FROM pj_gift_tmp2
        WHERE gift_id = #{gift_id}
    </delete>

    <delete id="deleteAll">
        TRUNCATE pj_gift_tmp2
    </delete>

</mapper>